datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//Marcius
model User {
  id         Int      @id @default(autoincrement())
  name       String
  cpf        String   @unique
  email      String   @unique
  pass       String
  phone      String
  signature  Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // quem carrega o 1 tem o vetor para muitos
  habits     Habit[]
  // quem carrega o 1 do um pra um
  //habits     Habit?

  groupId Int? @map("group_id")
  group   Group?     @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@map("users")
}

//Aula
model Habit {
  id         Int      @id @default(autoincrement())
  name       String
  description String
  urlImage   String
  isActive   Boolean
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // FK → User
  userId     Int      @map("user_id")
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  //variavel  Model  relação (FK, PK, ação)

  @@map("habits")
}

model Role{
  id         Int      @id @default(autoincrement())
  name       String
  description String
  url String

  groupId Int @map("group_id")
  group   Group     @relation(fields: [groupId], references: [id], onDelete: Cascade)
}

model Group{
  id         Int      @id @default(autoincrement())
  name       String
  description String

  roles Role[]
  users User[]
}
